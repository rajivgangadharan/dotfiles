$(function(){logger.debug("[Chrome-Extension-BG]: Real Presence Web Suit extension loaded");function c(){chrome.tabs.query({status:"complete",url:"https://*/*"},function(j){console.dir(j);for(var k=0;k<j.length;k++){logger.debug("[Chrome-Extension-BG]: Injecting code into: [%s]",j[k].url);chrome.tabs.executeScript(j[k].id,{file:"scripts/jquery-2.0.3.min.js",allFrames:true});chrome.tabs.executeScript(j[k].id,{file:"scripts/media-content.min.js",allFrames:true});chrome.tabs.executeScript(j[k].id,{file:"scripts/ecs-content.min.js",allFrames:true})}})}c();var b=new com.polycom.rpws.HostAppController({host:"com.polycom.rpws.hostapp"});var a=null;var f=null;var h={};var d=0;logger.isLoggingEnabled=Boolean(logger.checkLoggingEnabled());chrome.runtime.onConnect.addListener(function(i){logger.debug("[Chrome-Extension-BG]: Background page: Listener: ",i);if(i.name==="ecscontent"){h[i.sender.tab.id]=i;f=i;logger.debug("[Chrome-Extension-BG]: Content script connected: ",i.sender.id);i.onMessage.addListener(function(j){e(j,i)})}else{if(i.name==="NACL"){h[i.sender.tab.id]=i;a=i;b.setPort(i);logger.debug("[Chrome-Extension-BG]: NACL script connected on media port: ",i.sender.id);i.onMessage.addListener(function(j){if(!b.getRpwsPagePortConnected()){logger.debug("[Chrome-Extension-BG]: HostAppController port is not set. Resetting the port");b.setPort(i)}g(j)});i.onDisconnect.addListener(function(j){if(b){b.setRpwsPagePortConnected(false);logger.debug("[Chrome-Extension-BG]: Disconnecting the hostAppController and the port if present.");b.disconnect()}})}}});chrome.tabs.onRemoved.addListener(function(j,i){if(h[j]&&h[j]["name"]==="NACL"){logger.debug("[Chrome-Extension-BG]: Tab removed: ",j,i);if(b){b.setRpwsPagePortConnected(false);b.disconnect()}}});chrome.tabs.onUpdated.addListener(function(j,i,k){});function e(j,i){logger.debug("[Chrome-Extension-BG]: [%s] contentScriptPort_listener [%s]",i.sender.id,j.name);if(j.name==="capture"){chrome.desktopCapture.chooseDesktopMedia(["screen","window"],i.sender.tab,function(k){logger.debug("[Chrome-Extension-BG]: [%s] got stream [%s]",i.sender.id,k);i.postMessage({name:"stream",id:k})})}else{if(j.name==="capture_started"){}else{if(j.name==="capture_stopped"){}}}}function g(i){logger.trace("[Chrome-Extension-BG]: sendMessageToHost: ",i);b.handleMessageFromPage(i)}});