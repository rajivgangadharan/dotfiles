/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "chrome-extension://undefined/content/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Messaging_MessagingManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n\nconsole.log(location.href);\nconsole.log('Initialising TH Messaging Handler');\nwindow.textHelp = window.textHelp || {};\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n  console.log(sender.tab ? \"from a content script:\" + sender.tab.url : \"from the extension\");\n\n  if (request.sender == \"DatadeskTrigger\") {\n    InitialiseDatadesk(request.UserDeIdent);\n  }\n});\nvar MessagingManagerInstance;\n\nfunction SendMessageToAllTabs(payLoad) {\n  chrome.tabs.query({}, function (tabs) {\n    // eslint-disable-next-line no-restricted-syntax\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = tabs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var tab = _step.value;\n        var id = tab.id,\n            url = tab.url;\n\n        if (url.includes(\"chrome://\") || url.includes(\"devtools://\")) {\n          continue;\n        }\n\n        chrome.tabs.sendMessage(id, payLoad, function (response) {});\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  });\n}\n\nfunction InitialiseDatadesk(userID) {\n  console.log('setting up datadesk');\n\n  if (MessagingManagerInstance == undefined) {\n    var onMessagingAlarm = function onMessagingAlarm(alarm) {\n      switch (alarm.name) {\n        case \"MessageExpired\":\n          // Create dummy message;\n          var newMessageReset = {\n            features: {},\n            expired: 'expired'\n          };\n          MessagingManagerInstance.LastMessage = newMessageReset;\n          var payLoad = {\n            \"sender\": \"datadesk\",\n            \"data\": newMessageReset\n          };\n          SendMessageToAllTabs(payLoad);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    console.log(\"initialising messages...\");\n    MessagingManagerInstance = new _Messaging_MessagingManager_js__WEBPACK_IMPORTED_MODULE_0__[\"MessagingManager\"](undefined);\n    var topic = userID;\n    MessagingManagerInstance.getLastMessage(topic, true, function (lastMessage) {\n      if (lastMessage !== undefined) {\n        if (lastMessage.features != undefined) MessagingManagerInstance.LastMessage = lastMessage;\n        var payLoad = {\n          \"sender\": \"datadesk\",\n          \"data\": lastMessage\n        };\n        SendMessageToAllTabs(payLoad);\n      } //inMemoryLicense.pfs = policy.features;\n      //this.ParseLicenceDataDesk(lastMessage);\n\n    });\n    chrome.idle.onStateChanged.addListener(function (newState) {\n      if (newState == 'active') {\n        MessagingManagerInstance.checkIfStalled(true, 120000);\n      }\n    }); // Add messaging listener\n\n    chrome.alarms.onAlarm.addListener(onMessagingAlarm);\n    ;\n    MessagingManagerInstance.onMessage(function (license) {\n      console.log('new message -> ' + license);\n\n      if (license.features != undefined) {\n        if (MessagingManagerInstance.LastMessage.timestamp != license.timestamp) {\n          MessagingManagerInstance.LastMessage = license;\n          var payLoad = {\n            \"sender\": \"datadesk\",\n            \"data\": license\n          };\n          SendMessageToAllTabs(payLoad);\n        } else {\n          console.log('no change in datadesk');\n        }\n      }\n    });\n  } else {\n    if (MessagingManagerInstance.LastMessage != undefined) {\n      var payLoad = {\n        \"sender\": \"datadesk\",\n        \"data\": MessagingManagerInstance.LastMessage\n      };\n      SendMessageToAllTabs(payLoad);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2JhY2tncm91bmQvaW5kZXguanM/MjNiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBNZXNzYWdpbmdNYW5hZ2VyXG59IGZyb20gJy4vTWVzc2FnaW5nL01lc3NhZ2luZ01hbmFnZXIuanMnO1xuXG5jb25zb2xlLmxvZyhsb2NhdGlvbi5ocmVmKTtcbmNvbnNvbGUubG9nKCdJbml0aWFsaXNpbmcgVEggTWVzc2FnaW5nIEhhbmRsZXInKTtcbndpbmRvdy50ZXh0SGVscCA9IHdpbmRvdy50ZXh0SGVscCB8fCB7fTtcblxuXG5jaHJvbWUucnVudGltZS5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoXG4gIGZ1bmN0aW9uIChyZXF1ZXN0LCBzZW5kZXIsIHNlbmRSZXNwb25zZSkge1xuICAgIGNvbnNvbGUubG9nKHNlbmRlci50YWIgP1xuICAgICAgXCJmcm9tIGEgY29udGVudCBzY3JpcHQ6XCIgKyBzZW5kZXIudGFiLnVybCA6XG4gICAgICBcImZyb20gdGhlIGV4dGVuc2lvblwiKTtcbiAgICBpZiAocmVxdWVzdC5zZW5kZXIgPT0gXCJEYXRhZGVza1RyaWdnZXJcIikge1xuXG4gICAgICBJbml0aWFsaXNlRGF0YWRlc2socmVxdWVzdC5Vc2VyRGVJZGVudCk7XG4gICAgXG5cbiAgICB9XG4gIH1cbik7XG5cblxuXG52YXIgTWVzc2FnaW5nTWFuYWdlckluc3RhbmNlO1xuXG5mdW5jdGlvbiBTZW5kTWVzc2FnZVRvQWxsVGFicyhwYXlMb2FkKVxue1xuICBjaHJvbWUudGFicy5xdWVyeSh7fSwgdGFicyA9PiB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gICAgZm9yIChjb25zdCB0YWIgb2YgdGFicykge1xuICAgICAgY29uc3Qge1xuICAgICAgICBpZCxcbiAgICAgICAgdXJsXG4gICAgICB9ID0gdGFiO1xuICAgICAgaWYgKHVybC5pbmNsdWRlcyhcImNocm9tZTovL1wiKSB8fCB1cmwuaW5jbHVkZXMoXCJkZXZ0b29sczovL1wiKSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICBcbiAgICAgIGNocm9tZS50YWJzLnNlbmRNZXNzYWdlKGlkLCBwYXlMb2FkLCBmdW5jdGlvbiAocmVzcG9uc2UpIHtcblxuXG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBJbml0aWFsaXNlRGF0YWRlc2sodXNlcklEKSB7XG4gIGNvbnNvbGUubG9nKCdzZXR0aW5nIHVwIGRhdGFkZXNrJyk7XG4gIGlmIChNZXNzYWdpbmdNYW5hZ2VySW5zdGFuY2UgPT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc29sZS5sb2coXCJpbml0aWFsaXNpbmcgbWVzc2FnZXMuLi5cIik7XG4gICAgTWVzc2FnaW5nTWFuYWdlckluc3RhbmNlID0gbmV3IE1lc3NhZ2luZ01hbmFnZXIodW5kZWZpbmVkKTtcblxuICAgIHZhciB0b3BpYyA9IHVzZXJJRDsgXG5cbiAgICBNZXNzYWdpbmdNYW5hZ2VySW5zdGFuY2UuZ2V0TGFzdE1lc3NhZ2UodG9waWMsIHRydWUsIChsYXN0TWVzc2FnZSkgPT4ge1xuXG4gICAgICBpZiAobGFzdE1lc3NhZ2UgIT09IHVuZGVmaW5lZCkge1xuXG4gIFxuICAgICAgICBpZiAobGFzdE1lc3NhZ2UuZmVhdHVyZXMgIT0gdW5kZWZpbmVkKVxuXG4gICAgICAgICAgTWVzc2FnaW5nTWFuYWdlckluc3RhbmNlLkxhc3RNZXNzYWdlID0gbGFzdE1lc3NhZ2U7XG5cbiAgICAgICAgICB2YXIgcGF5TG9hZCA9IHtcbiAgICAgICAgICAgIFwic2VuZGVyXCI6IFwiZGF0YWRlc2tcIixcbiAgICAgICAgICAgIFwiZGF0YVwiOiBsYXN0TWVzc2FnZVxuICAgICAgICAgIH07XG4gICAgICAgICAgU2VuZE1lc3NhZ2VUb0FsbFRhYnMocGF5TG9hZCk7XG4gICAgICAgIFxuICAgICAgXG5cblxuXG4gICAgICB9XG5cbiAgICAgIC8vaW5NZW1vcnlMaWNlbnNlLnBmcyA9IHBvbGljeS5mZWF0dXJlcztcblxuICAgICAgLy90aGlzLlBhcnNlTGljZW5jZURhdGFEZXNrKGxhc3RNZXNzYWdlKTtcbiAgICB9KTtcblxuXG4gICAgY2hyb21lLmlkbGUub25TdGF0ZUNoYW5nZWQuYWRkTGlzdGVuZXIoZnVuY3Rpb24gKG5ld1N0YXRlKSB7XG5cbiAgICAgIGlmIChuZXdTdGF0ZSA9PSAnYWN0aXZlJykge1xuICAgICAgICBNZXNzYWdpbmdNYW5hZ2VySW5zdGFuY2UuY2hlY2tJZlN0YWxsZWQodHJ1ZSwgMTIwMDAwKTtcbiAgICAgIH1cbiAgICB9KTtcblxuXG4gICAgLy8gQWRkIG1lc3NhZ2luZyBsaXN0ZW5lclxuICAgIGNocm9tZS5hbGFybXMub25BbGFybS5hZGRMaXN0ZW5lcihvbk1lc3NhZ2luZ0FsYXJtKTtcblxuICAgIGZ1bmN0aW9uIG9uTWVzc2FnaW5nQWxhcm0oYWxhcm0pIHtcblxuICAgICAgc3dpdGNoIChhbGFybS5uYW1lKSB7XG4gICAgICAgIGNhc2UgXCJNZXNzYWdlRXhwaXJlZFwiOlxuICAgICAgICAgIC8vIENyZWF0ZSBkdW1teSBtZXNzYWdlO1xuICAgICAgICAgIHZhciBuZXdNZXNzYWdlUmVzZXQgPSB7XG4gICAgICAgICAgICBmZWF0dXJlczoge30sXG4gICAgICAgICAgICBleHBpcmVkOiAnZXhwaXJlZCdcbiAgICAgICAgICB9O1xuICAgICAgICAgIE1lc3NhZ2luZ01hbmFnZXJJbnN0YW5jZS5MYXN0TWVzc2FnZSA9IG5ld01lc3NhZ2VSZXNldDtcblxuICAgICAgICAgIHZhciBwYXlMb2FkID0ge1xuICAgICAgICAgICAgXCJzZW5kZXJcIjogXCJkYXRhZGVza1wiLFxuICAgICAgICAgICAgXCJkYXRhXCI6IG5ld01lc3NhZ2VSZXNldFxuICAgICAgICAgIH07XG4gICAgICAgICAgU2VuZE1lc3NhZ2VUb0FsbFRhYnMocGF5TG9hZCk7XG4gICAgICAgICBcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBNZXNzYWdpbmdNYW5hZ2VySW5zdGFuY2Uub25NZXNzYWdlKChsaWNlbnNlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnbmV3IG1lc3NhZ2UgLT4gJyArIGxpY2Vuc2UpO1xuICAgICAgaWYgKGxpY2Vuc2UuZmVhdHVyZXMgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmKE1lc3NhZ2luZ01hbmFnZXJJbnN0YW5jZS5MYXN0TWVzc2FnZS50aW1lc3RhbXAgIT0gbGljZW5zZS50aW1lc3RhbXApXG4gICAgICAgIHtcbiAgICAgICAgTWVzc2FnaW5nTWFuYWdlckluc3RhbmNlLkxhc3RNZXNzYWdlID0gbGljZW5zZTtcblxuXG4gICAgICAgICAgICB2YXIgcGF5TG9hZCA9IHtcbiAgICAgICAgICAgICAgXCJzZW5kZXJcIjogXCJkYXRhZGVza1wiLFxuICAgICAgICAgICAgICBcImRhdGFcIjogbGljZW5zZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgU2VuZE1lc3NhZ2VUb0FsbFRhYnMocGF5TG9hZCk7XG4gICAgICAgIFxuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ25vIGNoYW5nZSBpbiBkYXRhZGVzaycpO1xuICAgICAgICAgIH1cblxuXG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKE1lc3NhZ2luZ01hbmFnZXJJbnN0YW5jZS5MYXN0TWVzc2FnZSAhPSB1bmRlZmluZWQpIHtcblxuICAgICAgdmFyIHBheUxvYWQgPSB7XG4gICAgICAgIFwic2VuZGVyXCI6IFwiZGF0YWRlc2tcIixcbiAgICAgICAgXCJkYXRhXCI6IE1lc3NhZ2luZ01hbmFnZXJJbnN0YW5jZS5MYXN0TWVzc2FnZVxuICAgICAgfTtcbiAgICAgIFNlbmRNZXNzYWdlVG9BbGxUYWJzKHBheUxvYWQpO1xuICAgICBcbiAgICB9XG4gIH1cblxuXG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFHQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBR0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFJQTtBQWhCQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBaUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUE4Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUVBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQWxCQTtBQW9CQTtBQUNBO0FBbEVBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFHQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFNQTtBQUlBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBd0JBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUVBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUVBO0FBQ0E7QUFHQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MessagingManager\", function() { return MessagingManager; });\n/* harmony import */ var _MessagingFactory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // Manages the messaging \n\nvar MessagingManager =\n/*#__PURE__*/\nfunction () {\n  // Constructor\n  function MessagingManager(messagingType, messageCallback) {\n    _classCallCheck(this, MessagingManager);\n\n    //console.log('constructing messenger');\n    // default to a Google account if no account type is set.\n    if (messagingType === undefined) {\n      messagingType = \"\";\n    } // create the authenticator for the current account type and get the users id. As we are in the constructor\n    // and don't want any OAuth dialogs on a Chrome start set Interactive here to false. \n\n\n    this._messaging = new _MessagingFactory_js__WEBPACK_IMPORTED_MODULE_0__[\"MessagingFactory\"](messagingType, messageCallback).messaging;\n    this.LastMessage = \"\";\n  }\n  /**\n  * Retrieves the last message send to the specified topic\n  * @param {string} topic - The topic to look up\n  * @param {bool} useCache - The topic to look up\n  * @param {function} callback - function to call on finish\n  */\n\n\n  _createClass(MessagingManager, [{\n    key: \"getLastMessage\",\n    value: function getLastMessage(topic, useCache, callback) {\n      //console.log('manager get last message');\n      this._messaging._getLastMessage(topic, useCache, callback);\n    }\n    /**\n    * Retrieves the last message send to the specified topic\n    * @param {string} topic - The topic to look up\n    * @param {function} callback - function to call on message\n    */\n\n  }, {\n    key: \"waitForNextMessage\",\n    value: function waitForNextMessage(topic, callback) {\n      // Are we already waiting for a message?\n      // If not wait\n      if (!this._messaging.waiting) {\n        // console.log('manager get last message');\n        this._messaging._waitForNextMessage(topic, callback);\n      }\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this._messaging._onMessage(callback);\n    }\n  }, {\n    key: \"checkIfStalled\",\n    value: function checkIfStalled(restartIfStalled, timeout) {\n      this._messaging._checkIfStalled(restartIfStalled, timeout);\n    }\n  }]);\n\n  return MessagingManager;\n}();\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2JhY2tncm91bmQvTWVzc2FnaW5nL01lc3NhZ2luZ01hbmFnZXIuanM/YjQ2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01lc3NhZ2luZ0ZhY3Rvcnl9IGZyb20gXCIuL01lc3NhZ2luZ0ZhY3RvcnkuanNcIlxuXG4vLyBNYW5hZ2VzIHRoZSBtZXNzYWdpbmcgXG4gZXhwb3J0IGNsYXNzIE1lc3NhZ2luZ01hbmFnZXIge1xuXG4gIC8vIENvbnN0cnVjdG9yXG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2luZ1R5cGUsIG1lc3NhZ2VDYWxsYmFjaykge1xuXG4gICAgLy9jb25zb2xlLmxvZygnY29uc3RydWN0aW5nIG1lc3NlbmdlcicpO1xuXG4gICAgICAvLyBkZWZhdWx0IHRvIGEgR29vZ2xlIGFjY291bnQgaWYgbm8gYWNjb3VudCB0eXBlIGlzIHNldC5cbiAgICAgIGlmIChtZXNzYWdpbmdUeXBlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbWVzc2FnaW5nVHlwZSA9XCJcIjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gY3JlYXRlIHRoZSBhdXRoZW50aWNhdG9yIGZvciB0aGUgY3VycmVudCBhY2NvdW50IHR5cGUgYW5kIGdldCB0aGUgdXNlcnMgaWQuIEFzIHdlIGFyZSBpbiB0aGUgY29uc3RydWN0b3JcbiAgICAgIC8vIGFuZCBkb24ndCB3YW50IGFueSBPQXV0aCBkaWFsb2dzIG9uIGEgQ2hyb21lIHN0YXJ0IHNldCBJbnRlcmFjdGl2ZSBoZXJlIHRvIGZhbHNlLiBcbiAgICAgIHRoaXMuX21lc3NhZ2luZyA9IChuZXcgTWVzc2FnaW5nRmFjdG9yeShtZXNzYWdpbmdUeXBlLCBtZXNzYWdlQ2FsbGJhY2spLm1lc3NhZ2luZyk7XG5cbiAgICAgIHRoaXMuTGFzdE1lc3NhZ2UgPSBcIlwiO1xuICB9XG5cbiAgLyoqXG4gICogUmV0cmlldmVzIHRoZSBsYXN0IG1lc3NhZ2Ugc2VuZCB0byB0aGUgc3BlY2lmaWVkIHRvcGljXG4gICogQHBhcmFtIHtzdHJpbmd9IHRvcGljIC0gVGhlIHRvcGljIHRvIGxvb2sgdXBcbiAgKiBAcGFyYW0ge2Jvb2x9IHVzZUNhY2hlIC0gVGhlIHRvcGljIHRvIGxvb2sgdXBcbiAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayAtIGZ1bmN0aW9uIHRvIGNhbGwgb24gZmluaXNoXG4gICovXG4gZ2V0TGFzdE1lc3NhZ2UodG9waWMsIHVzZUNhY2hlLCBjYWxsYmFjaykge1xuICAvL2NvbnNvbGUubG9nKCdtYW5hZ2VyIGdldCBsYXN0IG1lc3NhZ2UnKTtcbiAgdGhpcy5fbWVzc2FnaW5nLl9nZXRMYXN0TWVzc2FnZSh0b3BpYywgdXNlQ2FjaGUsIGNhbGxiYWNrKTtcbn1cblxuLyoqXG4qIFJldHJpZXZlcyB0aGUgbGFzdCBtZXNzYWdlIHNlbmQgdG8gdGhlIHNwZWNpZmllZCB0b3BpY1xuKiBAcGFyYW0ge3N0cmluZ30gdG9waWMgLSBUaGUgdG9waWMgdG8gbG9vayB1cFxuKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayAtIGZ1bmN0aW9uIHRvIGNhbGwgb24gbWVzc2FnZVxuKi9cbndhaXRGb3JOZXh0TWVzc2FnZSh0b3BpYywgY2FsbGJhY2spIHtcbiAgLy8gQXJlIHdlIGFscmVhZHkgd2FpdGluZyBmb3IgYSBtZXNzYWdlP1xuICAvLyBJZiBub3Qgd2FpdFxuICBpZiAoIXRoaXMuX21lc3NhZ2luZy53YWl0aW5nKSB7XG4gICAvLyBjb25zb2xlLmxvZygnbWFuYWdlciBnZXQgbGFzdCBtZXNzYWdlJyk7XG4gICAgdGhpcy5fbWVzc2FnaW5nLl93YWl0Rm9yTmV4dE1lc3NhZ2UodG9waWMsIGNhbGxiYWNrKTtcbiAgfVxufVxuXG5vbk1lc3NhZ2UoY2FsbGJhY2spIHtcbiAgdGhpcy5fbWVzc2FnaW5nLl9vbk1lc3NhZ2UoY2FsbGJhY2spO1xufVxuXG5jaGVja0lmU3RhbGxlZChyZXN0YXJ0SWZTdGFsbGVkLCB0aW1lb3V0KSB7XG4gIHRoaXMuX21lc3NhZ2luZy5fY2hlY2tJZlN0YWxsZWQocmVzdGFydElmU3RhbGxlZCwgdGltZW91dCk7XG59XG4gIFxuXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBREE7QUFFQTtBQUNBO0FBRUE7Ozs7Ozs7O0FBbkJBO0FBQUE7QUFBQTtBQTBCQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7O0FBOUJBO0FBQUE7QUFBQTtBQW9DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTFDQTtBQUFBO0FBQUE7QUE2Q0E7QUFDQTtBQTlDQTtBQUFBO0FBQUE7QUFpREE7QUFDQTtBQWxEQTtBQUNBO0FBREE7QUFBQTtBQXFEQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MessagingFactory\", function() { return MessagingFactory; });\n/* harmony import */ var _GCMMessaging_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // Creates the right type of messaging based on the the type passed.\n// By default it will use the couch db messaging\n\nvar MessagingFactory =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @constructor\n   * @param {string} messagingType - message type to create.\n   * @param {function} messageCallback - function called on message\n   */\n  function MessagingFactory(messagingType, messageCallback) {\n    _classCallCheck(this, MessagingFactory);\n\n    try {\n      switch (messagingType) {\n        default:\n          this._messaging = new _GCMMessaging_js__WEBPACK_IMPORTED_MODULE_0__[\"GCMMessaging\"]('224182583415', 'gcm', messageCallback);\n          break;\n      }\n    } catch (ex) {\n      console.log(ex);\n      this._messaging = {};\n    }\n  }\n  /**\n   * Read only property to get the correct messaging instance\n   * @constructor\n   * @return {object} instance of the created authenticator.\n   */\n\n\n  _createClass(MessagingFactory, [{\n    key: \"messaging\",\n    get: function get() {\n      return this._messaging;\n    }\n  }]);\n\n  return MessagingFactory;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2JhY2tncm91bmQvTWVzc2FnaW5nL01lc3NhZ2luZ0ZhY3RvcnkuanM/ZWQ3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7R0NNTWVzc2FnaW5nfSBmcm9tICcuL0dDTU1lc3NhZ2luZy5qcyc7XG5cbi8vIENyZWF0ZXMgdGhlIHJpZ2h0IHR5cGUgb2YgbWVzc2FnaW5nIGJhc2VkIG9uIHRoZSB0aGUgdHlwZSBwYXNzZWQuXG4vLyBCeSBkZWZhdWx0IGl0IHdpbGwgdXNlIHRoZSBjb3VjaCBkYiBtZXNzYWdpbmdcblxuZXhwb3J0IGNsYXNzIE1lc3NhZ2luZ0ZhY3Rvcnkge1xuXG4gIC8qKlxuICAgKiBAY29uc3RydWN0b3JcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2luZ1R5cGUgLSBtZXNzYWdlIHR5cGUgdG8gY3JlYXRlLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBtZXNzYWdlQ2FsbGJhY2sgLSBmdW5jdGlvbiBjYWxsZWQgb24gbWVzc2FnZVxuICAgKi9cbiAgY29uc3RydWN0b3IobWVzc2FnaW5nVHlwZSwgbWVzc2FnZUNhbGxiYWNrKSB7XG4gICAgICB0cnl7XG4gICAgICAgICAgc3dpdGNoIChtZXNzYWdpbmdUeXBlKSB7XG4gICAgICAgICAgXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICB0aGlzLl9tZXNzYWdpbmcgPSBuZXcgR0NNTWVzc2FnaW5nKCcyMjQxODI1ODM0MTUnLCAnZ2NtJywgbWVzc2FnZUNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgICAgY2F0Y2goZXgpe1xuICAgICAgICAgIGNvbnNvbGUubG9nKGV4KTtcbiAgICAgICAgICB0aGlzLl9tZXNzYWdpbmcgPSB7fTtcbiAgICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZWFkIG9ubHkgcHJvcGVydHkgdG8gZ2V0IHRoZSBjb3JyZWN0IG1lc3NhZ2luZyBpbnN0YW5jZVxuICAgKiBAY29uc3RydWN0b3JcbiAgICogQHJldHVybiB7b2JqZWN0fSBpbnN0YW5jZSBvZiB0aGUgY3JlYXRlZCBhdXRoZW50aWNhdG9yLlxuICAgKi9cbiAgZ2V0IG1lc3NhZ2luZygpIHtcbiAgICAgIHJldHVybiB0aGlzLl9tZXNzYWdpbmc7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7Ozs7O0FBS0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7O0FBdEJBO0FBQUE7QUFBQTtBQTRCQTtBQUNBO0FBN0JBO0FBQ0E7QUFEQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GCMMessaging\", function() { return GCMMessaging; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// Manages the the current users identity \nvar GCMMessaging =\n/*#__PURE__*/\nfunction () {\n  // Constructor\n  function GCMMessaging(database, syncType, messageCallback) {\n    var _this = this;\n\n    _classCallCheck(this, GCMMessaging);\n\n    // sample url\n    // https://messaging-db.texthelp.com/test-channel/_design/last/_view/last_view_topic?descending=true&limit=1&include_docs=true&startkey=[\"505e96030d9acc82debe4340d1e11954d8ed99643b79a12e72cab0b111d9715a@gedudemotexthelpsupport.com\",{}]&endkey=[\"505e96030d9acc82debe4340d1e11954d8ed99643b79a12e72cab0b111d9715a@gedudemotexthelpsupport.com\"]\n    this._senderId = [database];\n    this._messagingUrl = 'https://messaging.texthelp.com/'; // this._messagingUrl = 'http://localhost:53530/';\n\n    this._messagingCallback = messageCallback;\n    this._lastMessage = undefined;\n    this._waiting = false;\n    this._onMessageCallback = undefined;\n    this._lastTopic = undefined;\n    this._lastCallback = undefined;\n    this._lastWaitTopic = undefined;\n    this._lastWaitCallback = undefined;\n    this._syncType = syncType;\n\n    this._GCMListen();\n\n    chrome.alarms.onAlarm.addListener(function (alarm) {\n      switch (alarm.name) {\n        case \"GCMKeepAlive\":\n          if (_this._lastTopic != undefined) {\n            _this._registerTopic(_this._lastTopic, false, function (response) {});\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n  /**\n   * In GCM there isn't a way to get a new last message.\n   * By default we return the last last message\n   * @param {string} topic - The topic to look up\n   * @param {bool} useCache - Use the cached version if it exists\n   * @param {function} callback - Callback function to call on completion\n   *       If undefined use massageCallback defined in the constructor\n   */\n\n\n  _createClass(GCMMessaging, [{\n    key: \"_getLastMessage\",\n    value: function _getLastMessage(topic, useCache, callback) {\n      var expired = false;\n      var haveLastMessage = this._lastMessage !== undefined;\n\n      if (topic !== this._lastTopic) {\n        useCache = false;\n      }\n\n      if (this._lastTopic !== topic) {\n        // Register the topic with our service\n        this._registerTopic(topic, true, function (result) {});\n      }\n\n      this._lastTopic = topic;\n      this._lastCallback = callback;\n\n      if (useCache && haveLastMessage) {\n        try {\n          if (this._lastMessage.timetype == 'timed') {\n            if (this._expiryTimeMS(this._lastMessage, true) < 0) {\n              expired = true;\n            }\n          }\n        } catch (error) {\n          // The message isn't in the correct format, throw it away\n          expired = true;\n        }\n\n        if (callback !== undefined) {\n          if (expired) {\n            callback(undefined);\n          } else {\n            callback(this._lastMessage);\n          }\n        }\n\n        if (this._messagingCallback !== undefined) {\n          if (expired) {\n            this._messagingCallback(this._lastMessage);\n          } else {\n            this._messagingCallback(this._lastMessage);\n          }\n        }\n\n        return;\n      }\n\n      try {\n        var serviceUrl = this._messagingUrl + 'getlastmessage/v1';\n        var xhr = new XMLHttpRequest();\n        xhr.withCredentials = true;\n        var data = JSON.stringify({\n          \"message_topic\": topic\n        });\n        xhr.addEventListener(\"readystatechange\", function () {\n          if (xhr.readyState === 4) {\n            if (xhr.status == 200) {\n              // Tidy the response\n              var response = JSON.parse(xhr.responseText);\n              var lastMessage = undefined;\n\n              if (response.length > 0) {\n                // Extract the message\n                var tempDoc = response[0];\n                lastMessage = this._parseMessageDoc(tempDoc);\n              }\n\n              console.log('Got last message.');\n              this._lastMessage = lastMessage;\n              var expired = false;\n\n              try {\n                if (this._lastMessage.timetype == 'timed') {\n                  if (this._expiryTimeMS(this._lastMessage, true) < 0) {\n                    expired = true;\n                  }\n                }\n              } catch (error) {\n                // The message isn't in the correct format, throw it away\n                expired = true;\n              }\n\n              if (callback !== undefined) {\n                if (expired) {\n                  callback(undefined);\n                } else {\n                  callback(lastMessage);\n                }\n              }\n\n              if (this._messagingCallback !== undefined) {\n                if (expired) {\n                  this._messagingCallback(undefined);\n                } else {\n                  this._messagingCallback(lastMessage);\n                }\n              }\n\n              if (!expired && this._onMessageCallback !== undefined) {\n                this._onMessageCallback(lastMessage);\n              }\n            } else {\n              if (callback !== undefined) {\n                callback(undefined);\n              }\n\n              if (this._messagingCallback !== undefined) {\n                this._messagingCallback(undefined);\n              }\n            }\n          }\n        }.bind(this));\n        xhr.open(\"POST\", serviceUrl);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.setRequestHeader(\"Authorization\", \"Basic \" + this._clientAuth);\n        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhr.send(data);\n      } catch (error) {// throw it away\n      }\n    }\n    /**\n     * Wait for the next message to come in\n     * @param {string} topic - The topic to listen for\n     * @param {function} callback - optional function to call on message\n     */\n\n  }, {\n    key: \"_waitForNextMessage\",\n    value: function _waitForNextMessage(topic, callback) {\n      this._waiting = true;\n\n      if (topic !== this._lastTopic) {\n        // Register the topic with our service\n        this._registerTopic(topic, true, function (result) {});\n      } // Remove for now, not sure it helps anyway\n      // this._GCMKeepAlive(5);\n\n\n      this._lastWaitCallback = callback;\n    }\n  }, {\n    key: \"_onMessage\",\n    value: function _onMessage(callback) {\n      this._onMessageCallback = callback;\n    }\n    /**\n    * Checks if the waiting for a message has stalled\n    * This can happen after a laptop goes to sleep\n    * for example.\n    * @param {bool} restartIfStalled - Attempt to restart waiting?\n    * @param {number} timeout - timeout in milliseconds after last wait\n    * @returns {bool} Has the waiting timed out\n    */\n\n  }, {\n    key: \"_checkIfStalled\",\n    value: function _checkIfStalled(restartIfStalled, timeout) {\n      // if timeout isn't set default to 1 minute\n      return true;\n    }\n    /**\n     * Parese the document and retrun a valid message\n     * @param {json} document - The document to parse\n     */\n\n  }, {\n    key: \"_parseMessageDoc\",\n    value: function _parseMessageDoc(document) {\n      var returnMessage = undefined;\n\n      try {\n        // Get the message\n        var tempMessage = {};\n\n        if (typeof document['message'] == \"string\") {\n          tempMessage = JSON.parse(document['message']);\n        } else {\n          tempMessage = document['message'];\n        }\n\n        returnMessage = {};\n\n        try {\n          returnMessage.features = tempMessage['disabled-features'].reduce(function (obj, v) {\n            obj[v] = 0;\n            return obj;\n          }, {});\n        } catch (error) {\n          returnMessage.features = {};\n        }\n\n        returnMessage.time = tempMessage.time;\n        returnMessage.timetype = tempMessage.timetype; // Parse the timestamp into a useable format\n        // var timestamp = moment(document.ts, 'YYYYMMDDHHmmss').utc();\n        // returnMessage.timestamp = timestamp.toISOString();\n\n        returnMessage.timestamp = document.post_date;\n      } catch (error) {\n        returnMessage = undefined;\n      }\n\n      return returnMessage;\n    }\n  }, {\n    key: \"_expiryTimeMS\",\n    value: function _expiryTimeMS(message, setAlarm) {\n      // Check we have a valid time addition\n      if (!Number.isNaN(message.time)) {\n        // convert the timestamp back into a date\n        try {\n          var currDateTime = moment(new Date()).utc();\n          var timestamp = moment(message.timestamp).utc();\n          var expiryDate = timestamp.clone();\n          expiryDate.add(message.time, 'h');\n          var diff = expiryDate.diff(currDateTime);\n\n          if (setAlarm && diff > 0) {\n            chrome.alarms.create('MessageExpired', {\n              when: expiryDate.valueOf()\n            }); // chrome.alarms.create('MessageExpired', {delayInMinutes: 5});\n          }\n\n          return diff;\n        } catch (error) {\n          // Not a valid date, ignore\n          console.error(error);\n        }\n      }\n    }\n  }, {\n    key: \"_GCMKeepAlive\",\n    value: function _GCMKeepAlive(waitTimeInMinutes) {\n      // Check the alarm isn't already active\n      //GCMKeepAlive\n      chrome.alarms.get('GCMKeepAlive', function (alarm) {\n        if (alarm == undefined) {\n          chrome.alarms.create('GCMKeepAlive', {\n            periodInMinutes: waitTimeInMinutes\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_registerTopic\",\n    value: function _registerTopic(topic, registerWithDb, callback) {\n      var _this2 = this;\n\n      chrome.storage.local.get(\"GCMRegistrationId\", function (result) {\n        var found = false;\n        chrome.gcm.register(_this2._senderId, function (registrationId) {\n          if (chrome.runtime.lastError != undefined) {\n            // When the registration fails, handle the error and retry the\n            // registration later.\n            callback(null);\n            return;\n          }\n\n          if (!registerWithDb) {\n            callback({\n              \"success\": true\n            });\n            return;\n          } // check the topic is stored\n\n\n          if (result.id != undefined && result.topics != undefined) {\n            if (result.id == registrationId) {\n              if (result.topics.indexOf(token) > -1) {\n                found = true; // remove the above line and uncomment below after sprint has gone out.\n\n                /*\n                if (result.lastModified != undefined) {\n                  // Check it's not over a week old\n                  var currDate = moment(); // fixed just for testing, use moment();\n                  var lastModified = moment(result.lastModified);\n                  var expiry = currDate.clone().subtract(7, 'days').startOf('day');\n                   if (lastModified.isBefore(expiry)) {\n                    found = true;\n                  }\n                }\n                */\n              }\n            }\n          }\n\n          if (!found) {\n            // do we have an id?\n            if (result.id != undefined) {\n              // We have an id, register the topic against it\n              if (result.topics != undefined) {\n                result.topics.push(topic);\n              } else {\n                result.topics = [topic];\n              } // Register with our service\n\n\n              _this2._registerIdWithService(registrationId, topic, function (result) {\n                if (result) {\n                  result.lastModified = moment().utc();\n                  chrome.storage.local.set({\n                    GCMRegistrationId: result\n                  }); // this._GCMListen();\n\n                  callback(result);\n                }\n              });\n            } else {\n              // Register with our service\n              _this2._registerIdWithService(registrationId, topic, function (result) {\n                if (result) {\n                  var regObject = {\n                    \"id\": registrationId,\n                    \"topics\": [topic],\n                    \"lastModified\": moment().utc()\n                  };\n                  chrome.storage.local.set({\n                    GCMRegistrationId: regObject\n                  });\n                  console.log('id registered with the messaging service.'); // this._GCMListen();\n\n                  callback(regObject);\n                }\n              });\n            }\n          } else {\n            callback(result);\n          }\n        });\n      });\n    }\n    /**\n    * Register the registration id and token\n    * @param {string} regid - The registration id from Google\n    * @param {string} topic - UThe topic we listen to\n    * @param {function} callback - Callback function to call on completion\n    *       If undefined use massageCallback defined in the constructor\n    */\n\n  }, {\n    key: \"_GCMListen\",\n    value: function _GCMListen() {\n      var _this3 = this;\n\n      chrome.gcm.onMessage.addListener(function (message) {\n        // A message is an object with a data property that\n        // consists of key-value pairs.\n        // Tidy the response\n        var response = JSON.parse(message.data.message); // Throw away the message if it's not for us\n\n        if (response.message.application !== undefined) {\n          if (response.message.application.toLowerCase() !== 'rw4gc') {\n            return;\n          }\n        } // Extract the message if there is one\n\n\n        if (response.message.time !== undefined) {\n          // Extract the message\n          var lastMessage = _this3._parseMessageDoc(response);\n\n          _this3._lastMessage = lastMessage;\n          var expired = false;\n\n          try {\n            if (_this3._lastMessage.timetype == 'timed') {\n              if (_this3._expiryTimeMS(_this3._lastMessage, true) < 0) {\n                expired = true;\n              }\n            }\n          } catch (error) {\n            // The message isn't in the correct format, throw it away\n            expired = true;\n          }\n\n          if (!expired && _this3._messagingCallback !== undefined) {\n            _this3._messagingCallback(lastMessage);\n          }\n\n          if (!expired && _this3._onMessageCallback !== undefined) {\n            _this3._onMessageCallback(lastMessage);\n          }\n        }\n      });\n    }\n    /**\n     * Register the registration id and token\n     * @param {string} regid - The registration id from Google\n     * @param {string} topic - UThe topic we listen to\n     * @param {function} callback - Callback function to call on completion\n     *       If undefined use massageCallback defined in the constructor\n     */\n\n  }, {\n    key: \"_registerIdWithService\",\n    value: function _registerIdWithService(regid, topic, callback) {\n      var serviceUrl = this._messagingUrl + 'registertoken/v1';\n      var xhr = new XMLHttpRequest();\n      xhr.withCredentials = true;\n      var data = JSON.stringify({\n        \"message_topic\": topic,\n        \"google_token\": regid\n      });\n      xhr.addEventListener(\"readystatechange\", function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status == 200) {\n            // Tidy the response\n            var response = JSON.parse(xhr.responseText);\n\n            if (callback !== undefined) {\n              callback(response.success);\n            }\n          } else {\n            // just log the messaging error for now\n            if (callback !== undefined) {\n              callback(false);\n            }\n          }\n        }\n      }.bind(this));\n      xhr.open(\"POST\", serviceUrl);\n      xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n      xhr.send(data);\n    }\n  }, {\n    key: \"waiting\",\n    get: function get() {\n      return this._waiting;\n    }\n  }]);\n\n  return GCMMessaging;\n}();\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ })
/******/ ]);